name: CThub-Api-Depl
on:
  push:
    branches: [master]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: .Net Env
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'
      - run: dotnet restore
      - run: dotnet build --configuration Release --no-restore
  docker-build-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Check Code
        uses: actions/checkout@v3
      - name: Log into Dockerhub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Build Docker Image
        run: |
          docker build -t "${{ secrets.DOCKER_USERNAME }}"/cthub-app:latest .
          docker push "${{ secrets.DOCKER_USERNAME }}"/cthub-app:latest
  deployment:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts
#      - name: SSH into EC2
#        run: ssh "${{ secrets.EC2_USER }}"@"${{ secrets.EC2_HOST }}"
#        uses: appleboy/ssh-action@v0.1.6
#        with: 
#          host: "${{ secrets.EC2_HOST }}"
#          username: "${{ secrets.EC2_USER }}"
#          key: "${{ secrets.SSH_PRIVATE_KEY }}"
#          script: |
#            docker stop cthub-app || true
#            docker rm cthub-app || true
#            docker pull "${{ secrets.DOCKER_USERNAME }}"/cthub-app:latest
#            docker run -d -p 80:5125 --name cthub-app "${{ secrets.DOCKER_USERNAME }}"/cthub-app:latests